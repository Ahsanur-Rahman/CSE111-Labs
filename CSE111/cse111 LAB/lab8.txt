//task1
public class Passenger{
    double helper;
    String name;
    static int no_of_passenger;
     static double total_fare;
    double weightFare;
    double fare;

    void setBaggageWeight(double weight){
        fare+=10*weight;
        weightFare=10*weight;

        total_fare+=weightFare;

    }
    Passenger(String name,double dis){
        no_of_passenger++;
        fare+=20*dis;

        total_fare+=fare;

        this.name=name;
    }

    void passengerDetails(){
        System.out.println("Name: "+this.name);
        System.out.println(("Total Fare: "+fare));
    }


}

//task2
public class Book{
    static int total_books_sold;
    static double total_revenue;
    double price=150;
    String name;

    Book(String name,int dis){
        this.name=name;
        price=calculate(dis);
        total_revenue+=price;
        total_books_sold++;
    }
    double calculate(double dis){
        this.price=price-((dis/100)*price);
        return this.price;
    }
    void bookDetails(){
        System.out.println("Title: "+this.name);
        System.out.println("Price after Discount: \n"+this.price+" TK");
    }
}


//task3
public class Student{
    static int total_students;
  static  int cse_students;
   static int other_department_student;
    static int ID=0;
    double CGPA;
    String name;
    String department;
    Student(String name, double CGPA){
        ++this.ID;
        this.name=name;
        this.CGPA=CGPA;
        department="CSE";
        cse_students++;
        total_students++;

    }
    Student(String name, double cgpa, String department){
        this.name = name;
        this.CGPA = cgpa;
        this.department = department;
        ++this.ID;
       ++ total_students;
        ++other_department_student;

    }

    static Student createStudent(String name,double CGPA,String dep){

       return new Student(name,CGPA,dep);

    }
    void individualDetail(){
        System.out.println("ID: "+this.ID +
                "\n Name: " +this.name+
                "\nCGPA: " +this.CGPA+
                "\nDepartment: " +this.department);

    }

    static void printDetails(){
        System.out.println("Total Student(s): "+total_students);

        System.out.println("CSE Student(s): "+cse_students);
        System.out.println("Other Department Student(s): "+other_department_student);
    }

}





//task4
public class Borrower{
    public static int book_count[] = {3, 3, 3};
    public static String book_name[] = {"Pather Panchali", "Durgesh Nandini", "Anandmath"};
    int flag=0;
    int j=0;
    String name;
   String[] borrowed_books=new String[3];
   Borrower(String name){
       this.name=name;
       int j=0;
   }


   void borrowBook(String bookName){

       for(int i=0;i<book_name.length;i++){
           if(book_name[i]==bookName && book_count[i]!=0){
               borrowed_books[j]=bookName;
               --book_count[i];
               flag=1;

               break;
           }

       }
       this.j++;
       if(flag==0){
           System.out.println("This book is not available.");
       }
   }

   static int remainingBooks(String bookName){
       int i;
       for( i=0;i<book_name.length;i++){
           if(book_name[i]==bookName){
               break;
           }
       }
       return book_count[i];
   }

   void borrowerDetails(){
       System.out.println("Name: "+this.name);
       System.out.println("Books Borrowed:");
       for(int i=0;i<borrowed_books.length;i++){
           if(borrowed_books[i]!=null){
               System.out.println(borrowed_books[i]);
           }

       }
   }

   static void bookStatus(){
       System.out.println("Available Books:");
       for (int i=0;i<book_count.length;i++){
           System.out.println(book_name[i]+": "+book_count[i]);
       }
   }

}


//task5
public class Cargo{
    static int idCounter;
    int ID;
    static double capacity=10;
    String contents;
    double weight;
    int flag=0;

    Cargo(String content, double weight){
        ID=++idCounter;

        this.weight=weight;
        contents=content;

    }
    void load(){
        capacity-=weight;
        if(capacity>=0){
            System.out.println("Cargo ID: "+ID+" loaded for transport");
            flag=1;
        }
        else{
            System.out.println("Cannot load cargo, exceeds weight capacity.");
            capacity+=weight;
        }
    }

    void unload(){
        flag= 0;
        capacity+=weight;
        System.out.println("Cargo "+ID+" unloaded");
    }

    static double capacity(){
        return capacity;
    }

    void details(){
        System.out.println("Cargo ID: "+this.ID+", Contents:"+this.contents+",");
        System.out.print("Weight: "+weight+", Loaded: ");
        if(flag==1){
            System.out.print("true\n");
        }
        else{
            System.out.println("false\n");
        }

    }
}


//task6

  public double radius;
  
    public void area() {
        double area = Math.PI * Math.pow(radius, 2); 
        System.out.printf("Area of %s %s: %.2f\n", color, name, area);
    }
    

//task7


 public String name;
    public Dog() {
        System.out.println("The dog says hello!");
    }
    public String getName() {
        return name;
    }
    public void updateSound(String newSound) {
        this.sound = newSound;
    }
